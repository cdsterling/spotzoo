{"ast":null,"code":"var _jsxFileName = \"/Users/marbypangilinan/Desktop/Spotzoo/spotzoo/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport NavBar from './components/NavBar/NavBar.js';\nimport SmallCard from './components/SmallCard/SmallCard.js';\nimport MapOne from './components/Map/Map.js';\nimport ReactMapGl, { Marker } from \"react-map-gl\";\nimport Red from \"./red_marker.png\";\nimport User from \"./user.png\";\nimport PetsIcon from '@material-ui/icons/Pets';\nimport { Icon } from '@material-ui/core'; // Component - Pages\n// import Welcome from './components/pages/Welcome/Welcome.js';\n// animal_data = [\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         spot_time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     }\n// ]\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      animal_details: null,\n      filter: \"\",\n      highlighted_animal: null,\n      animal_name: \"\",\n      animal_latitude: null,\n      animal_longitude: null,\n      animal_spot_time: null,\n      animal_animalType: null,\n      \"viewport\": {\n        width: '100vw',\n        height: '100vh',\n        latitude: 37.6162,\n        longitude: -122.0884,\n        zoom: 10\n      },\n      userLocation: {},\n      data: [],\n      distance: [],\n      animals: [],\n      animal: \"name\",\n      submitter: \"submitter\",\n      comment: \"comment\"\n    };\n\n    this.onViewportChange = viewport => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this.setUserLocation = () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        let setUserLocation = {\n          lat: position.coords.latitude,\n          long: position.coords.longitude\n        }; // distance to markers\n\n        let distanceOne = {};\n\n        for (let i of this.state.data) {\n          let k = new mapboxgl.LngLat(i.longitude, i.latitude);\n          let s = new mapboxgl.LngLat(setUserLocation.long, setUserLocation.lat);\n          let dist = k.distanceTo(s) * 0.000621;\n          let miles = Math.max(Math.ceil(dist * 10) / 10, 2.8);\n          let id = i[\"_id\"];\n          distanceOne[id] = miles;\n        }\n\n        this.setState({\n          distance: distanceOne\n        });\n        console.log(this.state.distance);\n        this.setState({\n          userLocation: setUserLocation\n        });\n        this.state.viewport.latitude = position.coords.latitude;\n        this.state.viewport.longitude = position.coords.longitude;\n      });\n    };\n\n    this.onChangeContent = ev => {\n      this.setState({\n        animal: ev.target.value\n      });\n    };\n\n    this.onChangeSubmitter = ev => {\n      this.setState({\n        submitter: ev.target.value\n      });\n    };\n\n    this.onChangeComment = ev => {\n      this.setState({\n        comment: ev.target.value\n      });\n    };\n\n    this.submit = () => {\n      var date = new Date();\n      const formData = {\n        animal: this.state.animal,\n        latitude: this.state.userLocation.lat,\n        longitude: this.state.userLocation.long,\n        comment: this.state.comment,\n        submitter: this.state.submitter,\n        time: String(date),\n        emoji: \"\\u2728\"\n      };\n      console.log(this.state.name);\n      fetch('/api/mongodb/markers/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      }).then(response => response.json()).then(data => {\n        console.log('Got this back', data);\n      });\n    };\n  }\n\n  // DELETE function,\n  deleteMarker(documentId) {\n    fetch('/api/mongodb/markers/?_id=' + documentId, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => {\n      console.log('Got this back', data);\n      this.onFetch();\n    });\n  } // Api call grab data from mongodb\n  // this.setState({data}, () => console.log('data fetched...', data)\n  //       dataOne.push(data);\n\n\n  onFetch() {\n    console.log('runing');\n    let dataOne = [];\n    fetch('/api/mongodb/markers/').then(res => res.json()).then(data => {\n      console.log('receiving data', data);\n      dataOne.push(data);\n      this.setState({\n        data\n      });\n      console.log(dataOne);\n      this.setUserLocation();\n    });\n    fetch('/api/mongodb/animals/').then(res => res.json()).then(animals => {\n      console.log('receiving data', animals);\n      this.setState({\n        animals\n      });\n      console.log(animals);\n    });\n  }\n\n  componentDidMount() {\n    this.onFetch();\n  }\n\n  render() {\n    const One = Object.keys(this.state.userLocation).length;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"NavBarContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      homeLink: \"/\",\n      contributeLink: \"/contribute\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"SideBarContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(SmallCard, {\n      emoji: '🐇',\n      name: 'name',\n      timestamp: 'timestamp',\n      submitted_by: 'submitted by',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(SmallCard, {\n      emoji: '🐇',\n      name: 'name',\n      timestamp: 'timestamp',\n      submitted_by: 'submitted by',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(SmallCard, {\n      emoji: '🐇',\n      name: 'name',\n      timestamp: 'timestamp',\n      submitted_by: 'submitted by',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(SmallCard, {\n      emoji: '🐇',\n      name: 'name',\n      timestamp: 'timestamp',\n      submitted_by: 'submitted by',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(SmallCard, {\n      emoji: '🐇',\n      name: 'name',\n      timestamp: 'timestamp',\n      submitted_by: 'submitted by',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"MapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(ReactMapGl, Object.assign({}, this.state.viewport, {\n      mapboxApiAccessToken: process.env.REACT_APP_TOKEN,\n      mapStyle: \"mapbox://styles/marby87/ck6j39qkz0i7k1inu9gqqc4o1\",\n      onViewportChange: viewport => this.onViewportChange(viewport),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), Object.keys(this.state.userLocation).length !== 0 ? React.createElement(Marker, {\n      className: \"user\",\n      keys: \"1\",\n      latitude: this.state.userLocation.lat,\n      longitude: this.state.userLocation.long,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"location-icon\",\n      src: User,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Empty\"), Object.values(this.state.data).length !== 0 ? this.state.data.map((data, index) => React.createElement(Marker, {\n      className: \"markers\",\n      keys: data._id,\n      id: data._id,\n      latitude: data.latitude,\n      longitude: data.longitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(PetsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), this.state.distance[data._id], \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), \" \", data.animal, \"  \")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Empty\"))), React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"animal\",\n      value: this.state.animal,\n      onChange: this.onChangeContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Comment:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"comment\",\n      value: this.state.comment,\n      onChange: this.onChangeComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"submitter:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"submitter\",\n      value: this.state.submitter,\n      onChange: this.onChangeSubmitter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App; // <ReactMapGl\n// {...this.state.viewport}\n// mapboxApiAccessToken = {process.env.REACT_APP_TOKEN}\n// mapStyle ='mapbox://styles/marby87/ck6j39qkz0i7k1inu9gqqc4o1'\n// onViewportChange={(viewport) => this.onViewportChange(viewport)}> \n// {Object.keys(this.state.userLocation).length !== 0 ? (\n//   <Marker\n//     className=\"user\"\n//     keys =\"1\"\n//     latitude={this.state.userLocation.lat}\n//     longitude={this.state.userLocation.long}\n//   >\n//     <img className = \"location-icon\" src={User}/>\n//   </Marker>\n// ) : ( \n//   <div>Empty</div>\n// )}\n// {Object.values(this.state.data).length !==0 ?(\n//   this.state.data.map((data,index) => (\n//   <Marker\n//     className = \"markers\"\n//     keys={data._id}\n//     id={data._id}\n//     latitude={data.latitude}\n//     longitude={data.longitude}\n//     >\n//     <img className = \"location-icon\" src={data.emoji}/>\n//     {this.state.distance[data._id]} <br/> {data.animal}  </Marker>\n//   ))\n// ) : (\n//   <div>Empty</div>\n// )}\n// </ReactMapGl>\n// <MapOne          \n// onViewport ={(viewport) => this.onViewportChange(viewport)}\n// userLat ={this.state.userLocation.lat}\n// userLong ={this.state.userLocation.long}\n// User ={Red}\n// />","map":{"version":3,"sources":["/Users/marbypangilinan/Desktop/Spotzoo/spotzoo/client/src/App.js"],"names":["React","Component","mapboxgl","NavBar","SmallCard","MapOne","ReactMapGl","Marker","Red","User","PetsIcon","Icon","App","state","animal_details","filter","highlighted_animal","animal_name","animal_latitude","animal_longitude","animal_spot_time","animal_animalType","width","height","latitude","longitude","zoom","userLocation","data","distance","animals","animal","submitter","comment","onViewportChange","viewport","setState","setUserLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","long","distanceOne","i","k","LngLat","s","dist","distanceTo","miles","Math","max","ceil","id","console","log","onChangeContent","ev","target","value","onChangeSubmitter","onChangeComment","submit","date","Date","formData","time","String","emoji","name","fetch","method","headers","body","JSON","stringify","then","response","json","deleteMarker","documentId","onFetch","dataOne","res","push","componentDidMount","render","One","Object","keys","length","process","env","REACT_APP_TOKEN","values","map","index","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl'\n\nimport NavBar from './components/NavBar/NavBar.js';\nimport SmallCard from './components/SmallCard/SmallCard.js';\nimport MapOne from './components/Map/Map.js';\nimport ReactMapGl,{Marker} from \"react-map-gl\"\nimport Red from \"./red_marker.png\"\nimport User from \"./user.png\"\nimport PetsIcon from '@material-ui/icons/Pets';\nimport { Icon } from '@material-ui/core';\n\n// Component - Pages\n// import Welcome from './components/pages/Welcome/Welcome.js';\n\n// animal_data = [\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         spot_time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     }\n\n\n// ]\n\n\nclass App extends Component {\n\n  state = {\n      animal_details: null,\n      filter: \"\",\n      highlighted_animal: null,\n      animal_name: \"\",\n      animal_latitude: null,\n      animal_longitude: null,\n      animal_spot_time: null,\n      animal_animalType: null,\n      \"viewport\": {\n        width: '100vw',\n        height: '100vh',\n        latitude: 37.6162,\n        longitude: -122.0884,\n        zoom: 10\n      },\n      userLocation : {},\n      data:[],\n      distance : [],\n      animals:[],\n      animal:\"name\",\n      submitter:\"submitter\",\n      comment:\"comment\"\n      \n    };\n  \n  onViewportChange = viewport => {\n    this.setState({viewport});\n  }\n  // User location function\n  setUserLocation = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n       let setUserLocation = {\n           lat: position.coords.latitude,\n           long: position.coords.longitude\n        }; \n        // distance to markers\n        let distanceOne = {}\n        for (let i of this.state.data ){\n            let k = new mapboxgl.LngLat(i.longitude, i.latitude);\n            let s = new mapboxgl.LngLat(setUserLocation.long, setUserLocation.lat)\n            let dist = k.distanceTo(s)* 0.000621\n            let miles = (Math.max( Math.ceil(dist * 10) / 10, 2.8 ))\n            let id = i[\"_id\"];\n            distanceOne[id] = miles;     \n          } \n        this.setState({\n          distance : distanceOne\n        })\n        console.log(this.state.distance)\n        this.setState({\n          userLocation: setUserLocation,\n       });\n       this.state.viewport.latitude = position.coords.latitude;\n       this.state.viewport.longitude = position.coords.longitude;\n    });\n  };    \n    \n  // DELETE function,\n  deleteMarker(documentId) {\n    fetch('/api/mongodb/markers/?_id=' + documentId, {\n        method: 'DELETE',\n      })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Got this back', data);\n        this.onFetch();\n      });\n  }\n\n  // Api call grab data from mongodb\n\n  // this.setState({data}, () => console.log('data fetched...', data)\n  //       dataOne.push(data);\n  onFetch() {\n    console.log('runing')\n    let dataOne = []\n    fetch('/api/mongodb/markers/')\n        .then(res => res.json())\n        .then(data => {\n          console.log('receiving data', data);\n          dataOne.push(data);\n          this.setState({data});\n          console.log(dataOne)\n\n          this.setUserLocation();\n          \n                 \n        });\n    fetch('/api/mongodb/animals/')\n        .then(res => res.json())\n        .then(animals => {\n          console.log('receiving data', animals);\n          this.setState({animals});\n          console.log(animals)\n          })\n  }\n\n  onChangeContent = (ev) => {\n    this.setState({\n      animal : ev.target.value,\n    });\n  }\n  onChangeSubmitter = (ev) => {\n    this.setState({\n      submitter : ev.target.value,\n    });\n  }\n  onChangeComment = (ev) => {\n    this.setState({\n      comment : ev.target.value,\n    });\n  }\n\n  //Post function// create new markers, store data into database\n  submit = () => {\n      var date = new Date();\n    \n      const formData = {\n\n        animal : this.state.animal,\n        latitude: this.state.userLocation.lat,\n        longitude: this.state.userLocation.long, \n        comment :this.state.comment,\n        submitter : this.state.submitter,\n        time : String(date),\n        emoji:\"\\u2728\"\n\n      };\n      console.log(this.state.name)\n  \n      fetch('/api/mongodb/markers/', {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(formData),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n  \n        });\n  }\n  componentDidMount(){\n    \n    this.onFetch();  \n\n  }\n\n\n  render () {\n    const One = Object.keys(this.state.userLocation).length\n    \n    \n    return (\n      <div className=\"App\">\n        {/* Links go here */}\n        <div className=\"NavBarContainer\">\n          <NavBar \n            homeLink='/'\n            contributeLink='/contribute'\n          />\n        </div>\n        {/* switch/routes go here */}\n        <div className=\"SideBarContainer\">\n          <SmallCard \n            emoji={'🐇'}\n            name={'name'}\n            timestamp={'timestamp'}\n            submitted_by={'submitted by'}\n          />\n          <SmallCard \n            emoji={'🐇'}\n            name={'name'}\n            timestamp={'timestamp'}\n            submitted_by={'submitted by'}\n          />\n          <SmallCard \n            emoji={'🐇'}\n            name={'name'}\n            timestamp={'timestamp'}\n            submitted_by={'submitted by'}\n          />\n          <SmallCard \n            emoji={'🐇'}\n            name={'name'}\n            timestamp={'timestamp'}\n            submitted_by={'submitted by'}\n          />\n          <SmallCard \n            emoji={'🐇'}\n            name={'name'}\n            timestamp={'timestamp'}\n            submitted_by={'submitted by'}\n          />\n        </div>\n        <div className=\"MapContainer\">\n\n                <ReactMapGl\n                {...this.state.viewport}\n                mapboxApiAccessToken = {process.env.REACT_APP_TOKEN}\n                mapStyle ='mapbox://styles/marby87/ck6j39qkz0i7k1inu9gqqc4o1'\n                onViewportChange={(viewport) => this.onViewportChange(viewport)}> \n\n                {Object.keys(this.state.userLocation).length !== 0 ? (\n                  <Marker\n                    className=\"user\"\n                    keys =\"1\"\n                    latitude={this.state.userLocation.lat}\n                    longitude={this.state.userLocation.long}\n                  >\n                  \n                    <img className = \"location-icon\" src={User}/>\n                  </Marker>\n                ) : ( \n                  <div>Empty</div>\n                )}\n\n                {Object.values(this.state.data).length !==0 ?(\n                  this.state.data.map((data,index) => (\n                  <Marker\n                    className = \"markers\"\n                    keys={data._id}\n                    id={data._id}\n                    latitude={data.latitude}\n                    longitude={data.longitude}\n                    \n                    >\n                    <PetsIcon/>\n\n                    {this.state.distance[data._id]} <br/> {data.animal}  </Marker>\n\n                  ))\n                ) : (\n                  <div>Empty</div>\n                )}\n\n                </ReactMapGl>\n        \n       \n  </div>\n  <div className=\"form\">\n  <form>\n    <label>\n      Name:\n      <input type=\"text\" name=\"animal\" value={this.state.animal} onChange={this.onChangeContent}/>\n    </label>\n    <label>\n      Comment:\n      <input type=\"text\" name=\"comment\" value={this.state.comment} onChange={this.onChangeComment}/>\n    </label>\n    <label>\n      submitter:\n      <input type=\"text\" name=\"submitter\" value={this.state.submitter} onChange={this.onChangeSubmitter}/>\n    </label>\n    <input type=\"submit\" value=\"Submit\" onClick ={this.submit} />\n  </form>\n</div>\n</div>\n);\n}\n}\n\nexport default App;\n\n\n  // <ReactMapGl\n  // {...this.state.viewport}\n  // mapboxApiAccessToken = {process.env.REACT_APP_TOKEN}\n  // mapStyle ='mapbox://styles/marby87/ck6j39qkz0i7k1inu9gqqc4o1'\n  // onViewportChange={(viewport) => this.onViewportChange(viewport)}> \n\n  // {Object.keys(this.state.userLocation).length !== 0 ? (\n  //   <Marker\n  //     className=\"user\"\n  //     keys =\"1\"\n  //     latitude={this.state.userLocation.lat}\n  //     longitude={this.state.userLocation.long}\n  //   >\n    \n  //     <img className = \"location-icon\" src={User}/>\n  //   </Marker>\n  // ) : ( \n  //   <div>Empty</div>\n  // )}\n\n  // {Object.values(this.state.data).length !==0 ?(\n  //   this.state.data.map((data,index) => (\n  //   <Marker\n  //     className = \"markers\"\n  //     keys={data._id}\n  //     id={data._id}\n  //     latitude={data.latitude}\n  //     longitude={data.longitude}\n      \n  //     >\n  //     <img className = \"location-icon\" src={data.emoji}/>\n\n  //     {this.state.distance[data._id]} <br/> {data.animal}  </Marker>\n\n  //   ))\n  // ) : (\n  //   <div>Empty</div>\n  // )}\n\n  // </ReactMapGl>\n\n\n\n              // <MapOne          \n              // onViewport ={(viewport) => this.onViewportChange(viewport)}\n\n              // userLat ={this.state.userLocation.lat}\n              // userLong ={this.state.userLocation.long}\n              // User ={Red}\n              // />"]},"metadata":{},"sourceType":"module"}