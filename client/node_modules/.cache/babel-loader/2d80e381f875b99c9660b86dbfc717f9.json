{"ast":null,"code":"var _jsxFileName = \"/Users/marbypangilinan/Desktop/Spotzoo/spotzoo/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar.js';\nimport SmallCard from './components/SmallCard/SmallCard.js';\nimport ReactMapGl, { Marker } from \"react-map-gl\";\nimport Red from \"./red_marker.png\";\nimport User from \"./user.png\"; // Component - Pages\n// import Welcome from './components/pages/Welcome/Welcome.js';\n// animal_data = [\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         spot_time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     }\n// ]\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      animal_details: null,\n      filter: \"\",\n      highlighted_animal: null,\n      animal_name: \"\",\n      animal_latitude: null,\n      animal_longitude: null,\n      animal_spot_time: null,\n      animal_animalType: null,\n      \"viewport\": {\n        width: '100vw',\n        height: '100vh',\n        latitude: 37.6162,\n        longitude: -122.0884,\n        zoom: 10\n      },\n      userLocation: {},\n      data: [],\n      distance: null\n    };\n\n    this.onViewportChange = viewport => {\n      this.setState({\n        viewport\n      });\n    };\n\n    this.setUserLocation = () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        let setUserLocation = {\n          lat: position.coords.latitude,\n          long: position.coords.longitude\n        };\n        this.setState({\n          userLocation: setUserLocation\n        });\n        this.state.viewport.latitude = position.coords.latitude;\n        this.state.viewport.longitude = position.coords.longitude;\n      });\n    };\n\n    this.onChangeContent = ev => {\n      this.setState({\n        name: ev.target.value\n      });\n    };\n\n    this.submit = () => {\n      var date = new Date();\n      const formData = {\n        animal: this.state.name,\n        latitude: this.state.userLocation.lat,\n        longitude: this.state.userLocation.long,\n        date: date,\n        comment: this.state.comment,\n        submitter: this.state.submitter\n      };\n      console.log(this.state.name);\n      fetch('/api/mongodb/markers/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      }).then(response => response.json()).then(data => {\n        console.log('Got this back', data);\n      });\n    };\n  }\n\n  // DELETE function,\n  deleteMarker(documentId) {\n    fetch('/api/mongodb/markers/?_id=' + documentId, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => {\n      console.log('Got this back', data);\n      this.onFetch();\n    });\n  } // Api call grab data from mongodb\n\n\n  onFetch() {\n    console.log('runing');\n    let dataOne = [];\n    fetch('/api/mongodb/markers/').then(res => res.json()).then(data => this.setState({\n      data\n    }, () => console.log('data fetched...', data)));\n  }\n\n  componentDidMount() {\n    this.setUserLocation();\n    this.onFetch();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"NavBarContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      homeLink: \"/\",\n      contributeLink: \"/contribute\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"SideBarContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(SmallCard, {\n      emoji: '🐇',\n      name: 'name',\n      timestamp: 'timestamp',\n      submitted_by: 'submitted by',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(SmallCard, {\n      emoji: '🐇',\n      name: 'name',\n      timestamp: 'timestamp',\n      submitted_by: 'submitted by',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(SmallCard, {\n      emoji: '🐇',\n      name: 'name',\n      timestamp: 'timestamp',\n      submitted_by: 'submitted by',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(SmallCard, {\n      emoji: '🐇',\n      name: 'name',\n      timestamp: 'timestamp',\n      submitted_by: 'submitted by',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(SmallCard, {\n      emoji: '🐇',\n      name: 'name',\n      timestamp: 'timestamp',\n      submitted_by: 'submitted by',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"MapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(ReactMapGl, Object.assign({}, this.state.viewport, {\n      mapboxApiAccessToken: process.env.REACT_APP_TOKEN,\n      mapStyle: \"mapbox://styles/marby87/ck6j39qkz0i7k1inu9gqqc4o1\",\n      onViewportChange: viewport => this.onViewportChange(viewport),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), Object.keys(this.state.userLocation).length !== 0 ? React.createElement(Marker, {\n      className: \"user\",\n      keys: \"1\",\n      latitude: this.state.userLocation.lat,\n      longitude: this.state.userLocation.long,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"location-icon\",\n      src: User,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Empty\"), Object.values(this.state.data).length !== 0 ? this.state.data.map((data, index) => React.createElement(Marker, {\n      className: \"markers\",\n      keys: data.id,\n      id: data.id,\n      latitude: data.latitude,\n      longitude: data.longitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"location-icon\",\n      src: Red,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), data.animal)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Empty\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marbypangilinan/Desktop/Spotzoo/spotzoo/client/src/App.js"],"names":["React","Component","NavBar","SmallCard","ReactMapGl","Marker","Red","User","App","state","animal_details","filter","highlighted_animal","animal_name","animal_latitude","animal_longitude","animal_spot_time","animal_animalType","width","height","latitude","longitude","zoom","userLocation","data","distance","onViewportChange","viewport","setState","setUserLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","long","onChangeContent","ev","name","target","value","submit","date","Date","formData","animal","comment","submitter","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","deleteMarker","documentId","onFetch","dataOne","res","componentDidMount","render","process","env","REACT_APP_TOKEN","Object","keys","length","values","map","index","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,UAAP,IAAmBC,MAAnB,QAAgC,cAAhC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAGA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BQ,KAF0B,GAElB;AACJC,MAAAA,cAAc,EAAE,IADZ;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,kBAAkB,EAAE,IAHhB;AAIJC,MAAAA,WAAW,EAAE,EAJT;AAKJC,MAAAA,eAAe,EAAE,IALb;AAMJC,MAAAA,gBAAgB,EAAE,IANd;AAOJC,MAAAA,gBAAgB,EAAE,IAPd;AAQJC,MAAAA,iBAAiB,EAAE,IARf;AASJ,kBAAY;AACVC,QAAAA,KAAK,EAAE,OADG;AAEVC,QAAAA,MAAM,EAAE,OAFE;AAGVC,QAAAA,QAAQ,EAAE,OAHA;AAIVC,QAAAA,SAAS,EAAE,CAAC,QAJF;AAKVC,QAAAA,IAAI,EAAE;AALI,OATR;AAgBJC,MAAAA,YAAY,EAAG,EAhBX;AAiBJC,MAAAA,IAAI,EAAC,EAjBD;AAkBJC,MAAAA,QAAQ,EAAG;AAlBP,KAFkB;;AAAA,SAwB1BC,gBAxB0B,GAwBPC,QAAQ,IAAI;AAC7B,WAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;AACD,KA1ByB;;AAAA,SA4B1BE,eA5B0B,GA4BR,MAAM;AACtBC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AAClD,YAAIJ,eAAe,GAAG;AAClBK,UAAAA,GAAG,EAAED,QAAQ,CAACE,MAAT,CAAgBf,QADH;AAElBgB,UAAAA,IAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgBd;AAFJ,SAAtB;AAIC,aAAKO,QAAL,CAAc;AACZL,UAAAA,YAAY,EAAEM;AADF,SAAd;AAGD,aAAKpB,KAAL,CAAWkB,QAAX,CAAoBP,QAApB,GAA+Ba,QAAQ,CAACE,MAAT,CAAgBf,QAA/C;AACA,aAAKX,KAAL,CAAWkB,QAAX,CAAoBN,SAApB,GAAgCY,QAAQ,CAACE,MAAT,CAAgBd,SAAhD;AACF,OAVD;AAWD,KAxCyB;;AAAA,SA+D1BgB,eA/D0B,GA+DPC,EAAD,IAAQ;AACxB,WAAKV,QAAL,CAAc;AACZW,QAAAA,IAAI,EAAGD,EAAE,CAACE,MAAH,CAAUC;AADL,OAAd;AAGD,KAnEyB;;AAAA,SAsE1BC,MAtE0B,GAsEjB,MAAM;AACX,UAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AAEA,YAAMC,QAAQ,GAAG;AAEfC,QAAAA,MAAM,EAAG,KAAKrC,KAAL,CAAW8B,IAFL;AAGfnB,QAAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWc,YAAX,CAAwBW,GAHnB;AAIfb,QAAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWc,YAAX,CAAwBa,IAJpB;AAKfO,QAAAA,IAAI,EAAGA,IALQ;AAMfI,QAAAA,OAAO,EAAE,KAAKtC,KAAL,CAAWsC,OANL;AAOfC,QAAAA,SAAS,EAAG,KAAKvC,KAAL,CAAWuC;AAPR,OAAjB;AAUAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzC,KAAL,CAAW8B,IAAvB;AAEAY,MAAAA,KAAK,CAAC,uBAAD,EAA0B;AAC3BC,QAAAA,MAAM,EAAE,MADmB;AAE3BC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFkB;AAG3BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,QAAf;AAHqB,OAA1B,CAAL,CAKGY,IALH,CAKQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAMGF,IANH,CAMQjC,IAAI,IAAI;AACZyB,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B1B,IAA7B;AAED,OATH;AAUH,KA/FyB;AAAA;;AA0C1B;AACAoC,EAAAA,YAAY,CAACC,UAAD,EAAa;AACvBV,IAAAA,KAAK,CAAC,+BAA+BU,UAAhC,EAA4C;AAC7CT,MAAAA,MAAM,EAAE;AADqC,KAA5C,CAAL,CAGGK,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQjC,IAAI,IAAI;AACZyB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B1B,IAA7B;AACA,WAAKsC,OAAL;AACD,KAPH;AAQD,GApDyB,CAsD1B;;;AACAA,EAAAA,OAAO,GAAG;AACRb,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,QAAIa,OAAO,GAAG,EAAd;AACAZ,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACKM,IADL,CACUO,GAAG,IAAIA,GAAG,CAACL,IAAJ,EADjB,EAEKF,IAFL,CAEUjC,IAAI,IAAI,KAAKI,QAAL,CAAc;AAACJ,MAAAA;AAAD,KAAd,EAAsB,MAAMyB,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B1B,IAA/B,CAA5B,CAFlB;AAGC;;AAmCHyC,EAAAA,iBAAiB,GAAE;AACjB,SAAKpC,eAAL;AACA,SAAKiC,OAAL;AAED;;AAGDI,EAAAA,MAAM,GAAI;AAER,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAC,GADX;AAEE,MAAA,cAAc,EAAC,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EASE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE,IADT;AAEE,MAAA,IAAI,EAAE,MAFR;AAGE,MAAA,SAAS,EAAE,WAHb;AAIE,MAAA,YAAY,EAAE,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE,IADT;AAEE,MAAA,IAAI,EAAE,MAFR;AAGE,MAAA,SAAS,EAAE,WAHb;AAIE,MAAA,YAAY,EAAE,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAaE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE,IADT;AAEE,MAAA,IAAI,EAAE,MAFR;AAGE,MAAA,SAAS,EAAE,WAHb;AAIE,MAAA,YAAY,EAAE,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAmBE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE,IADT;AAEE,MAAA,IAAI,EAAE,MAFR;AAGE,MAAA,SAAS,EAAE,WAHb;AAIE,MAAA,YAAY,EAAE,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAyBE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE,IADT;AAEE,MAAA,IAAI,EAAE,MAFR;AAGE,MAAA,SAAS,EAAE,WAHb;AAIE,MAAA,YAAY,EAAE,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,CATF,EAyCE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD,oBACI,KAAKzD,KAAL,CAAWkB,QADf;AAEA,MAAA,oBAAoB,EAAIwC,OAAO,CAACC,GAAR,CAAYC,eAFpC;AAGA,MAAA,QAAQ,EAAE,mDAHV;AAIA,MAAA,gBAAgB,EAAG1C,QAAD,IAAc,KAAKD,gBAAL,CAAsBC,QAAtB,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMC2C,MAAM,CAACC,IAAP,CAAY,KAAK9D,KAAL,CAAWc,YAAvB,EAAqCiD,MAArC,KAAgD,CAAhD,GACC,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,IAAI,EAAE,GAFR;AAGE,MAAA,QAAQ,EAAE,KAAK/D,KAAL,CAAWc,YAAX,CAAwBW,GAHpC;AAIE,MAAA,SAAS,EAAE,KAAKzB,KAAL,CAAWc,YAAX,CAAwBa,IAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAiC,MAAA,GAAG,EAAE7B,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADD,GAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBH,EAoBC+D,MAAM,CAACG,MAAP,CAAc,KAAKhE,KAAL,CAAWe,IAAzB,EAA+BgD,MAA/B,KAAyC,CAAzC,GACC,KAAK/D,KAAL,CAAWe,IAAX,CAAgBkD,GAAhB,CAAoB,CAAClD,IAAD,EAAMmD,KAAN,KACpB,oBAAC,MAAD;AACE,MAAA,SAAS,EAAG,SADd;AAEE,MAAA,IAAI,EAAEnD,IAAI,CAACoD,EAFb;AAGE,MAAA,EAAE,EAAEpD,IAAI,CAACoD,EAHX;AAIE,MAAA,QAAQ,EAAEpD,IAAI,CAACJ,QAJjB;AAKE,MAAA,SAAS,EAAEI,IAAI,CAACH,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAiC,MAAA,GAAG,EAAEf,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAUGkB,IAAI,CAACsB,MAVR,CADA,CADD,GAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApCF,CADA,CAzCF,CADF;AAuFD;;AAhMyB;;AAmM5B,eAAetC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport NavBar from './components/NavBar/NavBar.js';\nimport SmallCard from './components/SmallCard/SmallCard.js';\nimport ReactMapGl,{Marker} from \"react-map-gl\"\nimport Red from \"./red_marker.png\"\nimport User from \"./user.png\"\n\n// Component - Pages\n// import Welcome from './components/pages/Welcome/Welcome.js';\n\n// animal_data = [\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     },\n//     { \n//         name: \"Lake Goose\",\n//         latitude: 1.22,\n//         longitude: 3.22,\n//         spot_time:\"7:22 AM\",\n//         animalType: \"Goose\"\n//     }\n\n\n// ]\n\n\nclass App extends Component {\n\n  state = {\n      animal_details: null,\n      filter: \"\",\n      highlighted_animal: null,\n      animal_name: \"\",\n      animal_latitude: null,\n      animal_longitude: null,\n      animal_spot_time: null,\n      animal_animalType: null,\n      \"viewport\": {\n        width: '100vw',\n        height: '100vh',\n        latitude: 37.6162,\n        longitude: -122.0884,\n        zoom: 10\n      },\n      userLocation : {},\n      data:[],\n      distance : null,\n      \n    };\n  \n  onViewportChange = viewport => {\n    this.setState({viewport});\n  }\n  // User location function\n  setUserLocation = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n       let setUserLocation = {\n           lat: position.coords.latitude,\n           long: position.coords.longitude\n        };\n        this.setState({\n          userLocation: setUserLocation,\n       });\n       this.state.viewport.latitude = position.coords.latitude;\n       this.state.viewport.longitude = position.coords.longitude;\n    });\n  };    \n    \n  // DELETE function,\n  deleteMarker(documentId) {\n    fetch('/api/mongodb/markers/?_id=' + documentId, {\n        method: 'DELETE',\n      })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Got this back', data);\n        this.onFetch();\n      });\n  }\n\n  // Api call grab data from mongodb\n  onFetch() {\n    console.log('runing')\n    let dataOne = []\n    fetch('/api/mongodb/markers/')\n        .then(res => res.json())\n        .then(data => this.setState({data}, () => console.log('data fetched...', data)));\n    }\n\n  onChangeContent = (ev) => {\n    this.setState({\n      name : ev.target.value,\n    });\n  }\n\n  //Post function// create new markers, store data into database\n  submit = () => {\n      var date = new Date();\n    \n      const formData = {\n\n        animal : this.state.name,\n        latitude: this.state.userLocation.lat,\n        longitude: this.state.userLocation.long, \n        date : date,\n        comment :this.state.comment,\n        submitter : this.state.submitter,\n\n      };\n      console.log(this.state.name)\n  \n      fetch('/api/mongodb/markers/', {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(formData),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n  \n        });\n  }\n  componentDidMount(){\n    this.setUserLocation();\n    this.onFetch();  \n\n  }\n\n\n  render () {\n    \n    return (\n      <div className=\"App\">\n        {/* Links go here */}\n        <div className=\"NavBarContainer\">\n          <NavBar \n            homeLink='/'\n            contributeLink='/contribute'\n          />\n        </div>\n        {/* switch/routes go here */}\n        <div className=\"SideBarContainer\">\n          <SmallCard \n            emoji={'🐇'}\n            name={'name'}\n            timestamp={'timestamp'}\n            submitted_by={'submitted by'}\n          />\n          <SmallCard \n            emoji={'🐇'}\n            name={'name'}\n            timestamp={'timestamp'}\n            submitted_by={'submitted by'}\n          />\n          <SmallCard \n            emoji={'🐇'}\n            name={'name'}\n            timestamp={'timestamp'}\n            submitted_by={'submitted by'}\n          />\n          <SmallCard \n            emoji={'🐇'}\n            name={'name'}\n            timestamp={'timestamp'}\n            submitted_by={'submitted by'}\n          />\n          <SmallCard \n            emoji={'🐇'}\n            name={'name'}\n            timestamp={'timestamp'}\n            submitted_by={'submitted by'}\n          />\n        </div>\n        <div className=\"MapContainer\">\n        <ReactMapGl\n        {...this.state.viewport}\n        mapboxApiAccessToken = {process.env.REACT_APP_TOKEN}\n        mapStyle ='mapbox://styles/marby87/ck6j39qkz0i7k1inu9gqqc4o1'\n        onViewportChange={(viewport) => this.onViewportChange(viewport)}> \n        \n        {Object.keys(this.state.userLocation).length !== 0 ? (\n          <Marker\n            className=\"user\"\n            keys =\"1\"\n            latitude={this.state.userLocation.lat}\n            longitude={this.state.userLocation.long}\n          >\n          \n            <img className = \"location-icon\" src={User}/>\n          </Marker>\n        ) : ( \n           <div>Empty</div>\n        )}\n\n        {Object.values(this.state.data).length !==0 ?(\n          this.state.data.map((data,index) => (\n          <Marker\n            className = \"markers\"\n            keys={data.id}\n            id={data.id}\n            latitude={data.latitude}\n            longitude={data.longitude}\n            \n            >\n            <img className = \"location-icon\" src={Red} \n            />\n            {data.animal}</Marker>\n  \n          ))\n        ) : (\n          <div>Empty</div>\n        )}\n          \n\n      </ReactMapGl>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}